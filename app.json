{
  "name": "Bors-NG",
  "description": "A merge bot for GitHub pull requests",
  "repository": "https://github.com/bors-ng/bors-ng",
  "website": "https://bors.tech/",
  "logo": "https://cdn.rawgit.com/bors-ng/bors-ng/b9e756ecfdf4ede9241a8a30cbfdc4c010fd0a22/icon/bors-eye.svg",
  "keywords": ["github", "continuous-integration", "continuous-testing", "elixir", "phoenix"],

  "success_url": "/auth/github",
  "env": {
    "COMMAND_TRIGGER": {
      "description": "Prefix for all commands",
      "value": "bors"
    },
    "MIX_ENV": {
      "description": "Mode to run the application in",
      "value": "prod"
    },
    "POOL_SIZE": {
      "description": "Number of connections to PostgreSQL to keep open",
      "value": "18"
    },
    "PUBLIC_HOST": {
      "description": "Where this website will be running (probably <app name>.herokuapp.com)"
    },
    "PUBLIC_PORT": {
      "description": "HTTPS port number on PUBLIC_HOST",
      "value": "443"
    },
    "SECRET_KEY_BASE": {
      "description": "A secret key for verifying the integrity of cookies",
      "generator": "secret"
    },
    "GITHUB_CLIENT_ID": {
      "description": "GitHub oAuth client ID"
    },
    "GITHUB_CLIENT_SECRET": {
      "description": "GitHub oAuth client secret"
    },
    "GITHUB_INTEGRATION_ID": {
      "description": "GitHub Integration ID"
    },
    "GITHUB_INTEGRATION_PEM": {
      "description": "GitHub Integration private key (download the file, encode it with `openssl base64 -A -e < key.pem`, then paste the result here)"
    },
    "GITHUB_WEBHOOK_SECRET": {
      "description": "Github Integration webhook secret"
    },
    "ALLOW_PRIVATE_REPOS": {
      "description": "Allow non-OSS GitHub repos to be added",
      "value": "true"
    }
  },
  "formation": {
    "web": {
      "quantity": 1
    }
  },
  "addons": [
    "heroku-postgresql:hobby-dev"
  ],
  "buildpacks": [
    {
      "url": "https://github.com/HashNuke/heroku-buildpack-elixir.git"
    },
    {
      "url": "https://github.com/gjaldon/heroku-buildpack-phoenix-static.git"
    }
  ],
  "scripts": {
    "postdeploy": "MIX_ENV=prod mix ecto.migrate"
  }
}
